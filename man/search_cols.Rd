% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/search_cols.R
\name{search_cols}
\alias{search_cols}
\title{Search for Pattern Across All Columns in a Data Frame}
\usage{
search_cols(df, pattern, ignore_case = TRUE)
}
\arguments{
\item{df}{A data frame to search within.}

\item{pattern}{A character string to search for. The pattern is treated as a
fixed string (not a regular expression).}

\item{ignore_case}{Logical indicating whether to perform a case-insensitive search.
Default is TRUE.}
}
\value{
The original data frame with an additional list-column named \code{matching_cols}.
Each element of \code{matching_cols} is a character vector containing the names of
columns where the pattern was found for that row.
}
\description{
Searches for a pattern within all columns of a data frame and identifies which
columns in each row contain matches. The function handles complex data structures
like nested data frames and lists, recursively searching within them.
}
\details{
The function performs a search using fixed pattern matching (not regular expressions).
By default, it is case-insensitive but this can be controlled with the \code{ignore_case}
parameter. It recursively searches through:
\itemize{
\item Atomic vectors (converting to character for comparison)
\item Nested lists (searching each element recursively)
\item Nested data frames (searching all values as character strings)
}

This function is especially useful for:
\itemize{
\item Finding which columns contain specific text in complex data structures
\item Filtering rows based on pattern presence across any column
\item Identifying where specific terms appear in publication metadata
}
}
\examples{
# do a simple data frame search (case-insensitive by default)
df <- data.frame(
  title = c("Climate Change Study", "Economic Analysis", "CLIMATE Policy"),
  abstract = c("Effects of warming on ecosystems", "Market trends", "Environmental regulations"),
  stringsAsFactors = FALSE
)
result <- search_cols(df, "climate")

# both "Climate Change Study" and "CLIMATE Policy" will match
result$matching_cols

# do a case-sensitive search (will only match exact case)
result_sensitive <- search_cols(df, "Climate", ignore_case = FALSE)
result_sensitive$matching_cols

# filter to show only rows where the pattern appears in any column
result[lengths(result$matching_cols) > 0, ]

}
\seealso{
\code{\link{grepl}} which is used internally for pattern matching.
}
